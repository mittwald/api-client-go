package file

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"fmt"
	"io"
	"net/http"
	"net/url"

	"github.com/google/uuid"
)

type GetFileRequest struct {
	FileID             uuid.UUID
	Accept             *GetFileRequestQueryAccept
	ContentDisposition *GetFileRequestQueryContentDisposition
	Token              *string
}

func (r *GetFileRequest) BuildRequest() (*http.Request, error) {
	body, err := r.body()
	if err != nil {
		return nil, err
	}

	return http.NewRequest(http.MethodGet, r.url(), body)
}

func (r *GetFileRequest) body() (io.Reader, error) {
	return nil, nil
}

func (r *GetFileRequest) url() string {
	return fmt.Sprintf("/v2/files/%s", url.PathEscape(r.FileID.String()))
}

func (r *GetFileRequest) query() url.Values {
	q := make(url.Values)
	if r.Accept != nil {
		q.Set("accept", string(*r.Accept))
	}
	if r.ContentDisposition != nil {
		q.Set("content-disposition", string(*r.ContentDisposition))
	}
	if r.Token != nil {
		q.Set("token", *r.Token)
	}
	return q
}
