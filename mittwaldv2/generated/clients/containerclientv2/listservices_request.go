package containerclientv2

import (
	"fmt"
	"io"
	"net/http"
	"net/url"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// ListServicesRequest models a request for the 'container-list-services'
// operation. See [1] for more information.
//
// List Services belonging to a Project.
//
// [1]:
// https://developer.mittwald.de/docs/v2/reference/container/container-list-services
type ListServicesRequest struct {
	ProjectID string
	StackID   *string
}

// BuildRequest builds an *http.Request instance from this request that may be used
// with any regular *http.Client instance.
func (r *ListServicesRequest) BuildRequest() (*http.Request, error) {
	body, contentType, err := r.body()
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest(http.MethodGet, r.url(), body)
	if err != nil {
		return nil, err
	}
	req.Header.Set("Content-Type", contentType)
	return req, nil
}

func (r *ListServicesRequest) body() (io.Reader, string, error) {
	return nil, "", nil
}

func (r *ListServicesRequest) url() string {
	u := url.URL{
		Path:     fmt.Sprintf("/v2/projects/%s/services", url.PathEscape(r.ProjectID)),
		RawQuery: r.query().Encode(),
	}
	return u.String()
}

func (r *ListServicesRequest) query() url.Values {
	q := make(url.Values)
	if r.StackID != nil {
		q.Set("stackId", *r.StackID)
	}
	return q
}
