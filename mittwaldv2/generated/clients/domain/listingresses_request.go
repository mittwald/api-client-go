package domain

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"fmt"
	"io"
	"net/http"
	"net/url"

	"github.com/google/uuid"
)

type ListIngressesRequest struct {
	ProjectID     *uuid.UUID
	CertificateID *uuid.UUID
	Limit         *int64
	Skip          *int64
	Page          *int64
}

func (r *ListIngressesRequest) BuildRequest() (*http.Request, error) {
	body, err := r.body()
	if err != nil {
		return nil, err
	}

	return http.NewRequest(http.MethodGet, r.url(), body)
}

func (r *ListIngressesRequest) body() (io.Reader, error) {
	return nil, nil
}

func (r *ListIngressesRequest) url() string {
	return "/v2/ingresses"
}

func (r *ListIngressesRequest) query() url.Values {
	q := make(url.Values)
	if r.ProjectID != nil {
		q.Set("projectId", r.ProjectID.String())
	}
	if r.CertificateID != nil {
		q.Set("certificateId", r.CertificateID.String())
	}
	if r.Limit != nil {
		q.Set("limit", fmt.Sprintf("%d", *r.Limit))
	}
	if r.Skip != nil {
		q.Set("skip", fmt.Sprintf("%d", *r.Skip))
	}
	if r.Page != nil {
		q.Set("page", fmt.Sprintf("%d", *r.Page))
	}
	return q
}
