package user

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// null

type AuthenticateResponse struct {
	AlternativeAuthenticateAcceptedResponse *AuthenticateAcceptedResponse
	AlternativeAuthenticateOKResponse       *AuthenticateOKResponse
}

func (a *AuthenticateResponse) MarshalJSON() ([]byte, error) {
	if a.AlternativeAuthenticateAcceptedResponse != nil {
		return json.Marshal(a.AlternativeAuthenticateAcceptedResponse)
	}
	if a.AlternativeAuthenticateOKResponse != nil {
		return json.Marshal(a.AlternativeAuthenticateOKResponse)
	}
	return []byte("null"), nil
}

func (a *AuthenticateResponse) UnmarshalJSON(input []byte) error {
	reader := bytes.NewReader(input)
	decodedAtLeastOnce := false
	dec := json.NewDecoder(reader)
	dec.DisallowUnknownFields()

	reader.Reset(input)
	var alternativeAuthenticateAcceptedResponse AuthenticateAcceptedResponse
	if err := dec.Decode(&alternativeAuthenticateAcceptedResponse); err == nil {
		//subtype: *generator.ObjectType
		if vErr := alternativeAuthenticateAcceptedResponse.Validate(); vErr == nil {
			a.AlternativeAuthenticateAcceptedResponse = &alternativeAuthenticateAcceptedResponse
			decodedAtLeastOnce = true
		}
	}

	reader.Reset(input)
	var alternativeAuthenticateOKResponse AuthenticateOKResponse
	if err := dec.Decode(&alternativeAuthenticateOKResponse); err == nil {
		//subtype: *generator.ObjectType
		if vErr := alternativeAuthenticateOKResponse.Validate(); vErr == nil {
			a.AlternativeAuthenticateOKResponse = &alternativeAuthenticateOKResponse
			decodedAtLeastOnce = true
		}
	}

	if !decodedAtLeastOnce {
		return fmt.Errorf("could not unmarshal into any alternative for type %T", a)
	}
	return nil
}

func (a *AuthenticateResponse) Validate() error {
	if a.AlternativeAuthenticateAcceptedResponse != nil {
		return a.AlternativeAuthenticateAcceptedResponse.Validate()
	}
	if a.AlternativeAuthenticateOKResponse != nil {
		return a.AlternativeAuthenticateOKResponse.Validate()
	}
	return errors.New("no alternative set")
}
