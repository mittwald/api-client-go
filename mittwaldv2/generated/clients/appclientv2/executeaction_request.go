package appclientv2

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"net/url"

	"github.com/mittwald/api-client-go/mittwaldv2/generated/schemas/appv2"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// ExecuteActionRequest models a request for the 'app-execute-action' operation.
// See [1] for more information.
//
// Trigger a runtime action belonging to an AppInstallation.
//
// [1]: https://developer.mittwald.de/docs/v2/reference/app/app-execute-action
type ExecuteActionRequest struct {
	Body              ExecuteActionRequestBody
	AppInstallationID string
	// An Action is a string that describes a runtime concerning action which can be
	// executed on an AppInstallation or an  App  can be capable of.
	Action appv2.Action
}

// BuildRequest builds an *http.Request instance from this request that may be used
// with any regular *http.Client instance.
func (r *ExecuteActionRequest) BuildRequest() (*http.Request, error) {
	body, err := r.body()
	if err != nil {
		return nil, err
	}

	return http.NewRequest(http.MethodPost, r.url(), body)
}

func (r *ExecuteActionRequest) body() (io.Reader, error) {
	out, err := json.Marshal(&r.Body)
	if err != nil {
		return nil, fmt.Errorf("error while marshalling JSON: %w", err)
	}
	return bytes.NewReader(out), nil
}

func (r *ExecuteActionRequest) url() string {
	return fmt.Sprintf("/v2/app-installations/%s/actions/%s", url.PathEscape(r.AppInstallationID), url.PathEscape(string(r.Action)))
}

func (r *ExecuteActionRequest) query() url.Values {
	return nil
}
