package marketplaceclientv2

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// This data type was generated from the following JSON schema:
// oneOf:
//    - type: "object"
//      properties:
//        "consentedScopes":
//            type: "array"
//            items:
//                type: "string"
//        "customerId":
//            type: "string"
//            format: "uuid"
//            description: "The customer the extension should be booked for. Either customerId or projectId is required."
//      required:
//        - "consentedScopes"
//        - "customerId"
//    - type: "object"
//      properties:
//        "consentedScopes":
//            type: "array"
//            items:
//                type: "string"
//        "projectId":
//            type: "string"
//            format: "uuid"
//            description: "The project the extension should be installed in. Either customerId or projectId is required."
//      required:
//        - "consentedScopes"
//        - "projectId"
// description: StartExtensionCheckoutRequestBody models the JSON body of a 'extension-start-extension-checkout' request

type StartExtensionCheckoutRequestBody struct {
	AlternativeStartExtensionCheckoutRequestBodyAlternative1 *StartExtensionCheckoutRequestBodyAlternative1
	AlternativeStartExtensionCheckoutRequestBodyAlternative2 *StartExtensionCheckoutRequestBodyAlternative2
}

func (a *StartExtensionCheckoutRequestBody) MarshalJSON() ([]byte, error) {
	if a.AlternativeStartExtensionCheckoutRequestBodyAlternative1 != nil {
		return json.Marshal(a.AlternativeStartExtensionCheckoutRequestBodyAlternative1)
	}
	if a.AlternativeStartExtensionCheckoutRequestBodyAlternative2 != nil {
		return json.Marshal(a.AlternativeStartExtensionCheckoutRequestBodyAlternative2)
	}
	return []byte("null"), nil
}

func (a *StartExtensionCheckoutRequestBody) UnmarshalJSON(input []byte) error {
	reader := bytes.NewReader(input)
	decodedAtLeastOnce := false
	dec := json.NewDecoder(reader)
	dec.DisallowUnknownFields()

	reader.Reset(input)
	var alternativeStartExtensionCheckoutRequestBodyAlternative1 StartExtensionCheckoutRequestBodyAlternative1
	if err := dec.Decode(&alternativeStartExtensionCheckoutRequestBodyAlternative1); err == nil {
		//subtype: *generator.ObjectType
		if vErr := alternativeStartExtensionCheckoutRequestBodyAlternative1.Validate(); vErr == nil {
			a.AlternativeStartExtensionCheckoutRequestBodyAlternative1 = &alternativeStartExtensionCheckoutRequestBodyAlternative1
			decodedAtLeastOnce = true
		}
	}

	reader.Reset(input)
	var alternativeStartExtensionCheckoutRequestBodyAlternative2 StartExtensionCheckoutRequestBodyAlternative2
	if err := dec.Decode(&alternativeStartExtensionCheckoutRequestBodyAlternative2); err == nil {
		//subtype: *generator.ObjectType
		if vErr := alternativeStartExtensionCheckoutRequestBodyAlternative2.Validate(); vErr == nil {
			a.AlternativeStartExtensionCheckoutRequestBodyAlternative2 = &alternativeStartExtensionCheckoutRequestBodyAlternative2
			decodedAtLeastOnce = true
		}
	}

	if !decodedAtLeastOnce {
		return fmt.Errorf("could not unmarshal into any alternative for type %T", a)
	}
	return nil
}

func (a *StartExtensionCheckoutRequestBody) Validate() error {
	if a.AlternativeStartExtensionCheckoutRequestBodyAlternative1 != nil {
		return a.AlternativeStartExtensionCheckoutRequestBodyAlternative1.Validate()
	}
	if a.AlternativeStartExtensionCheckoutRequestBodyAlternative2 != nil {
		return a.AlternativeStartExtensionCheckoutRequestBodyAlternative2.Validate()
	}
	return errors.New("no alternative set")
}
