package pageinsightsclientv2_test

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"encoding/json"

	"github.com/mittwald/api-client-go/mittwaldv2/generated/clients/pageinsightsclientv2"
	. "github.com/onsi/ginkgo/v2"
	. "github.com/onsi/gomega"
)

var _ = Describe("GetStraceDataResponseResult", func() {
	When("unmarshaling from JSON", func() {
		It("should unmarshal into AlternativeError", func() {
			exampleJSON := []byte("{\"errorMessage\":\"wrong PHP version\"}")

			sut := pageinsightsclientv2.GetStraceDataResponseResult{}
			Expect(json.Unmarshal(exampleJSON, &sut)).To(Succeed())
			Expect(sut.Validate()).To(Succeed())
			Expect(sut.AlternativeError).NotTo(BeNil())
		})
		It("should unmarshal into AlternativeData", func() {
			exampleJSON := []byte("{\"actualUrl\":\"https://www.mittwald.de/~b\",\"dbQueries\":[{\"query\":\"SELECT * FROM my_table;\",\"stats\":{\"kernelMs\":1.2345,\"occurrences\":25,\"syscallCount\":4321,\"userspaceMs\":1.2345},\"warnLevel\":\"NO\"}],\"dbStats\":{\"kernelMs\":1.2345,\"occurrences\":25,\"syscallCount\":4321,\"userspaceMs\":1.2345},\"fileOps\":[{\"filename\":\"my_file.php\",\"filepath\":\"/html/my-project\",\"stats\":{\"kernelMs\":1.2345,\"occurrences\":25,\"syscallCount\":4321,\"userspaceMs\":1.2345},\"warnLevel\":\"NO\"}],\"fileOpsStats\":{\"kernelMs\":1.2345,\"occurrences\":25,\"syscallCount\":4321,\"userspaceMs\":1.2345},\"miscStats\":{\"kernelMs\":1.2345,\"occurrences\":25,\"syscallCount\":4321,\"userspaceMs\":1.2345},\"networkingOps\":[{\"connectionType\":\"UNKNOWN\",\"description\":\"string\",\"ip\":\"string\",\"port\":42,\"stats\":{\"kernelMs\":1.2345,\"occurrences\":25,\"syscallCount\":4321,\"userspaceMs\":1.2345},\"warnLevel\":\"NO\"}],\"networkingStats\":{\"kernelMs\":1.2345,\"occurrences\":25,\"syscallCount\":4321,\"userspaceMs\":1.2345},\"slowdownFactor\":1.5,\"ttfbMs\":1532}")

			sut := pageinsightsclientv2.GetStraceDataResponseResult{}
			Expect(json.Unmarshal(exampleJSON, &sut)).To(Succeed())
			Expect(sut.Validate()).To(Succeed())
			Expect(sut.AlternativeData).NotTo(BeNil())
		})
	})
})
