package app

import (
	"errors"
	"fmt"

	"github.com/mittwald/api-client-go/mittwaldv2/generated/schemas/appv1"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "appVersionId":
//        type: "string"
//        format: "uuid"
//    "description":
//        type: "string"
//    "updatePolicy": {"$ref": "#/components/schemas/de.mittwald.v1.app.AppUpdatePolicy"}
//    "userInputs":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.app.SavedUserInput"}
// required:
//    - "appVersionId"
//    - "description"
//    - "userInputs"
//    - "updatePolicy"
// description: RequestAppinstallationRequestBody models the JSON body of a 'app-request-appinstallation' request

// RequestAppinstallationRequestBody models the JSON body of a 'app-request-appinstallation' request
type RequestAppinstallationRequestBody struct {
	AppVersionId string                 `json:"appVersionId"`
	Description  string                 `json:"description"`
	UpdatePolicy appv1.AppUpdatePolicy  `json:"updatePolicy"`
	UserInputs   []appv1.SavedUserInput `json:"userInputs"`
}

func (o *RequestAppinstallationRequestBody) Validate() error {
	if err := o.UpdatePolicy.Validate(); err != nil {
		return fmt.Errorf("invalid property updatePolicy: %w", err)
	}
	if o.UserInputs == nil {
		return errors.New("property userInputs is required, but not set")
	}
	if err := func() error {
		for i := range o.UserInputs {
			if err := o.UserInputs[i].Validate(); err != nil {
				return fmt.Errorf("item %d is invalid %w", i, err)
			}
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property userInputs: %w", err)
	}
	return nil
}
