package varnishv1

import (
	"errors"
	"fmt"
	"time"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "expire":
//        type: "integer"
//    "files":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.varnish.ConfigFileRef"}
//    "note":
//        type: "string"
//    "revision":
//        type: "integer"
//        minimum: 1
//    "updated":
//        type: "string"
//        format: "date-time"
// required:
//    - "revision"
//    - "updated"
//    - "files"

type ConfigRevision struct {
	Expire   *int64          `json:"expire,omitempty"`
	Files    []ConfigFileRef `json:"files"`
	Note     *string         `json:"note,omitempty"`
	Revision int64           `json:"revision"`
	Updated  time.Time       `json:"updated"`
}

func (o *ConfigRevision) Validate() error {
	if o.Files == nil {
		return errors.New("property files is required, but not set")
	}
	if err := func() error {
		for i := range o.Files {
			if err := o.Files[i].Validate(); err != nil {
				return fmt.Errorf("item %d is invalid %w", i, err)
			}
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property files: %w", err)
	}
	return nil
}
