package backupv2

import (
	"fmt"
	"time"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "createdAt":
//        type: "string"
//        format: "date-time"
//    "deletable":
//        type: "boolean"
//    "description":
//        type: "string"
//        example: "I'm a ProjectBackup"
//    "expiresAt":
//        type: "string"
//        format: "date-time"
//    "export": {"$ref": "#/components/schemas/de.mittwald.v1.backup.ProjectBackupExport"}
//    "id":
//        type: "string"
//        format: "uuid"
//    "parentId":
//        type: "string"
//        format: "uuid"
//    "projectId":
//        type: "string"
//        format: "uuid"
//    "requestedAt":
//        type: "string"
//        format: "date-time"
//    "restorePath": {"$ref": "#/components/schemas/de.mittwald.v1.backup.ProjectBackupRestorePathResponse"}
//    "status":
//        type: "string"
//        example: "Completed"
// required:
//    - "id"
//    - "projectId"
//    - "status"
//    - "deletable"
//    - "requestedAt"

type ProjectBackup struct {
	CreatedAt   *time.Time                        `json:"createdAt,omitempty"`
	Deletable   bool                              `json:"deletable"`
	Description *string                           `json:"description,omitempty"`
	ExpiresAt   *time.Time                        `json:"expiresAt,omitempty"`
	Export      *ProjectBackupExport              `json:"export,omitempty"`
	Id          string                            `json:"id"`
	ParentId    *string                           `json:"parentId,omitempty"`
	ProjectId   string                            `json:"projectId"`
	RequestedAt time.Time                         `json:"requestedAt"`
	RestorePath *ProjectBackupRestorePathResponse `json:"restorePath,omitempty"`
	Status      string                            `json:"status"`
}

func (o *ProjectBackup) Validate() error {
	if err := func() error {
		if o.Export == nil {
			return nil
		}
		return o.Export.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property export: %w", err)
	}
	if err := func() error {
		if o.RestorePath == nil {
			return nil
		}
		return o.RestorePath.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property restorePath: %w", err)
	}
	return nil
}
