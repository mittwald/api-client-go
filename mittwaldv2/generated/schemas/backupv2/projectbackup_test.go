package backupv2_test

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"encoding/json"

	"github.com/mittwald/api-client-go/mittwaldv2/generated/schemas/backupv2"
	. "github.com/onsi/ginkgo/v2"
	. "github.com/onsi/gomega"
)

var _ = Describe("ProjectBackup", func() {
	When("unmarshaling from JSON", func() {
		It("should unmarshal", func() {
			exampleJSON := []byte("{\"createdAt\":\"2006-01-02T15:04:05Z\",\"deletable\":true,\"description\":\"I'm a ProjectBackup\",\"expiresAt\":\"2006-01-02T15:04:05Z\",\"export\":{\"downloadURL\":\"string\",\"expiresAt\":\"2006-01-02T15:04:05Z\",\"format\":\"tar\",\"phase\":\"Pending\",\"sha256Checksum\":\"string\",\"withPassword\":true},\"id\":\"7a9d8971-09b0-4c39-8c64-546b6e1875ce\",\"parentId\":\"7a9d8971-09b0-4c39-8c64-546b6e1875ce\",\"projectId\":\"7a9d8971-09b0-4c39-8c64-546b6e1875ce\",\"requestedAt\":\"2006-01-02T15:04:05Z\",\"status\":\"Completed\"}")

			sut := backupv2.ProjectBackup{}
			Expect(json.Unmarshal(exampleJSON, &sut)).To(Succeed())
			Expect(sut.Validate()).To(Succeed())
		})
	})
})
