package llmlocksmithv2

import (
	"errors"
	"fmt"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "blocked":
//        type: "object"
//        properties:
//            "executingUserId":
//                type: "string"
//            "reason":
//                type: "string"
//            "timestamp":
//                type: "string"
//                format: "date-time"
//        required:
//            - "reason"
//            - "timestamp"
//    "containerMeta": {"$ref": "#/components/schemas/de.mittwald.v1.llmlocksmith.ContainerMeta"}
//    "customerId":
//        type: "string"
//    "licenceId":
//        type: "string"
//    "licenceKey":
//        type: "string"
//    "models":
//        type: "array"
//        items:
//            type: "string"
//    "name":
//        type: "string"
//    "projectId":
//        type: "string"
//    "rateLimit":
//        type: "number"
// required:
//    - "licenceId"
//    - "licenceKey"
//    - "models"
//    - "name"
//    - "rateLimit"

type Licence struct {
	Blocked       *LicenceBlocked `json:"blocked,omitempty"`
	ContainerMeta *ContainerMeta  `json:"containerMeta,omitempty"`
	CustomerId    *string         `json:"customerId,omitempty"`
	LicenceId     string          `json:"licenceId"`
	LicenceKey    string          `json:"licenceKey"`
	Models        []string        `json:"models"`
	Name          string          `json:"name"`
	ProjectId     *string         `json:"projectId,omitempty"`
	RateLimit     float64         `json:"rateLimit"`
}

func (o *Licence) Validate() error {
	if err := func() error {
		if o.Blocked == nil {
			return nil
		}
		return o.Blocked.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property blocked: %w", err)
	}
	if err := func() error {
		if o.ContainerMeta == nil {
			return nil
		}
		return o.ContainerMeta.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property containerMeta: %w", err)
	}
	if o.Models == nil {
		return errors.New("property models is required, but not set")
	}
	return nil
}
