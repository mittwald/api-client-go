package orderv1

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"fmt"

	"github.com/google/uuid"
)

//This data type was generated from the following JSON schema:
//type: "object"
//properties:
//    "addons":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.order.Addons"}
//    "articleId":
//        type: "string"
//        example: "PS23-PLUS-0004"
//    "articleName":
//        type: "string"
//        example: "proSpace"
//    "articleTemplateName":
//        type: "string"
//        example: "Pro-Space-Hosting"
//    "attributeConfiguration":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.order.AttributeConfiguration"}
//    "isInclusive":
//        type: "boolean"
//    "orderItemId":
//        type: "string"
//        format: "uuid"
//    "predefinedDomainAggregateId":
//        type: "string"
//        example: "aa38d836-fe72-4c43-aad3-9472b51edf61"
//    "price":
//        type: "number"
//        example: 1000
//    "reference": {"$ref": "#/components/schemas/de.mittwald.v1.order.Reference"}
//required:
//    - "orderItemId"
//    - "articleId"
//    - "price"
//    - "isInclusive"

//
type OrderItem struct {
	Addons                      []Addons                 `json:"addons,omitempty"`
	ArticleId                   string                   `json:"articleId"`
	ArticleName                 *string                  `json:"articleName,omitempty"`
	ArticleTemplateName         *string                  `json:"articleTemplateName,omitempty"`
	AttributeConfiguration      []AttributeConfiguration `json:"attributeConfiguration,omitempty"`
	IsInclusive                 bool                     `json:"isInclusive"`
	OrderItemId                 uuid.UUID                `json:"orderItemId"`
	PredefinedDomainAggregateId *string                  `json:"predefinedDomainAggregateId,omitempty"`
	Price                       float64                  `json:"price"`
	Reference                   *Reference               `json:"reference,omitempty"`
}

func (o *OrderItem) Validate() error {
	if err := func() error {
		if o.Addons == nil {
			return nil
		}
		return func() error {
			for i := range o.Addons {
				if err := o.Addons[i].Validate(); err != nil {
					return fmt.Errorf("item %d is invalid %w", i, err)
				}
			}
			return nil
		}()
	}(); err != nil {
		return fmt.Errorf("invalid property addons: %w", err)
	}
	if err := func() error {
		if o.AttributeConfiguration == nil {
			return nil
		}
		return func() error {
			for i := range o.AttributeConfiguration {
				if err := o.AttributeConfiguration[i].Validate(); err != nil {
					return fmt.Errorf("item %d is invalid %w", i, err)
				}
			}
			return nil
		}()
	}(); err != nil {
		return fmt.Errorf("invalid property attributeConfiguration: %w", err)
	}
	if err := func() error {
		if o.Reference == nil {
			return nil
		}
		return o.Reference.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property reference: %w", err)
	}
	return nil
}
