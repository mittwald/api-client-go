package dnsv1

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"fmt"

	"github.com/google/uuid"
)

//This data type was generated from the following JSON schema:
//type: "object"
//properties:
//    "domain":
//        type: "string"
//    "id":
//        type: "string"
//        format: "uuid"
//    "recordSet":
//        type: "object"
//        properties:
//            "caa": {"$ref": "#/components/schemas/de.mittwald.v1.dns.RecordCAA"}
//            "cname": {"$ref": "#/components/schemas/de.mittwald.v1.dns.RecordCNAME"}
//            "combinedARecords": {"$ref": "#/components/schemas/de.mittwald.v1.dns.RecordCombinedA"}
//            "mx": {"$ref": "#/components/schemas/de.mittwald.v1.dns.RecordMX"}
//            "srv": {"$ref": "#/components/schemas/de.mittwald.v1.dns.RecordSRV"}
//            "txt": {"$ref": "#/components/schemas/de.mittwald.v1.dns.RecordTXT"}
//        required:
//            - "combinedARecords"
//            - "cname"
//            - "mx"
//            - "txt"
//            - "srv"
//            - "caa"
//required:
//    - "id"
//    - "domain"
//    - "recordSet"

type Zone struct {
	Domain    string        `json:"domain"`
	Id        uuid.UUID     `json:"id"`
	RecordSet ZoneRecordSet `json:"recordSet"`
}

func (o *Zone) Validate() error {
	if err := o.RecordSet.Validate(); err != nil {
		return fmt.Errorf("invalid property recordSet: %w", err)
	}
	return nil
}
