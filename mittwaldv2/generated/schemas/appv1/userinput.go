package appv1

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
//type: "object"
//properties:
//    "dataSource":
//        type: "string"
//        description: "Optional field to tell the frontend, which data to put into the select."
//    "dataType": {"$ref": "#/components/schemas/de.mittwald.v1.app.UserInputDataType"}
//    "defaultValue":
//        type: "string"
//    "format": {"$ref": "#/components/schemas/de.mittwald.v1.app.UserInputFormat"}
//    "lifecycleConstraint": {"$ref": "#/components/schemas/de.mittwald.v1.app.AppInstallationLifecycle"}
//    "name":
//        type: "string"
//    "positionMeta": {"$ref": "#/components/schemas/de.mittwald.v1.app.UserInputPositionMeta"}
//    "required":
//        type: "boolean"
//    "validationSchema":
//        type: "string"
//        description: "JSON Schema formatted (https://json-schema.org/)."
//required:
//    - "name"
//    - "dataType"
//    - "validationSchema"
//    - "lifecycleConstraint"
//    - "required"
//description: "A UserInput is a description of an information which cannot be determined or estimated by mittwald, but has to be given by the person who is requesting an AppInstallation or SystemSoftware."

//A UserInput is a description of an information which cannot be determined or estimated by mittwald, but has to be given by the person who is requesting an AppInstallation or SystemSoftware.
type UserInput struct {
	DataSource          *string                  `json:"dataSource,omitempty"`
	DataType            UserInputDataType        `json:"dataType"`
	DefaultValue        *string                  `json:"defaultValue,omitempty"`
	Format              *UserInputFormat         `json:"format,omitempty"`
	LifecycleConstraint AppInstallationLifecycle `json:"lifecycleConstraint"`
	Name                string                   `json:"name"`
	PositionMeta        *UserInputPositionMeta   `json:"positionMeta,omitempty"`
	Required            bool                     `json:"required"`
	ValidationSchema    string                   `json:"validationSchema"`
}

func (o *UserInput) Validate() error {
	if err := o.DataType.Validate(); err != nil {
		return fmt.Errorf("invalid property dataType: %w", err)
	}
	if err := func() error {
		if o.Format == nil {
			return nil
		}
		return o.Format.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property format: %w", err)
	}
	if err := o.LifecycleConstraint.Validate(); err != nil {
		return fmt.Errorf("invalid property lifecycleConstraint: %w", err)
	}
	if err := func() error {
		if o.PositionMeta == nil {
			return nil
		}
		return o.PositionMeta.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property positionMeta: %w", err)
	}
	return nil
}
