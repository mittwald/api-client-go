package marketplacev1

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"errors"
	"fmt"
	"time"

	"github.com/google/uuid"
)

//This data type was generated from the following JSON schema:
//type: "object"
//properties:
//    "aggregateReference":
//        type: "object"
//        properties:
//            "aggregate":
//                type: "string"
//            "domain":
//                type: "string"
//            "id":
//                type: "string"
//                format: "uuid"
//        required:
//            - "id"
//            - "domain"
//            - "aggregate"
//    "consentedScopes":
//        type: "array"
//        items:
//            type: "string"
//    "createdAt":
//        type: "string"
//        format: "date-time"
//    "disabled":
//        type: "boolean"
//        default: false
//    "extensionId":
//        type: "string"
//        format: "uuid"
//    "id":
//        type: "string"
//        format: "uuid"
//    "pendingInstallation":
//        type: "boolean"
//        default: false
//    "pendingRemoval":
//        type: "boolean"
//        default: false
//required:
//    - "id"
//    - "extensionId"
//    - "disabled"
//    - "pendingInstallation"
//    - "pendingRemoval"
//    - "consentedScopes"
//    - "aggregateReference"

type ExtensionInstance struct {
	AggregateReference  ExtensionInstanceAggregateReference `json:"aggregateReference"`
	ConsentedScopes     []string                            `json:"consentedScopes"`
	CreatedAt           *time.Time                          `json:"createdAt,omitempty"`
	Disabled            bool                                `json:"disabled"`
	ExtensionId         uuid.UUID                           `json:"extensionId"`
	Id                  uuid.UUID                           `json:"id"`
	PendingInstallation bool                                `json:"pendingInstallation"`
	PendingRemoval      bool                                `json:"pendingRemoval"`
}

func (o *ExtensionInstance) Validate() error {
	if err := o.AggregateReference.Validate(); err != nil {
		return fmt.Errorf("invalid property aggregateReference: %w", err)
	}
	if o.ConsentedScopes == nil {
		return errors.New("property consentedScopes is required, but not set")
	}
	return nil
}
