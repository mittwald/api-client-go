package conversationv1

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"fmt"

	"github.com/google/uuid"
)

//This data type was generated from the following JSON schema:
//type: "object"
//properties:
//    "contact":
//        type: "object"
//        properties:
//            "email":
//                type: "string"
//            "firstname":
//                type: "string"
//            "lastname":
//                type: "string"
//            "phone":
//                type: "string"
//        required:
//            - "firstname"
//            - "lastname"
//            - "email"
//    "domain":
//        type: "object"
//        properties:
//            "allDomains":
//                type: "boolean"
//            "domains":
//                type: "array"
//                items:
//                    type: "object"
//                    properties:
//                        "authCode":
//                            type: "string"
//                        "domainName":
//                            type: "string"
//    "notes":
//        type: "string"
//    "preferredRelocationDate":
//        type: "string"
//        format: "date-time"
//    "redirectusKey":
//        type: "number"
//    "source":
//        type: "object"
//        properties:
//            "providerName":
//                type: "string"
//            "providerPassword":
//                type: "string"
//            "providerUrl":
//                type: "string"
//            "providerUsername":
//                type: "string"
//            "sourceAccount":
//                type: "string"
//        required:
//            - "sourceAccount"
//            - "providerName"
//            - "providerUrl"
//            - "providerUsername"
//            - "providerPassword"
//    "target":
//        type: "object"
//        properties:
//            "accountShortId":
//                type: "string"
//            "application":
//                type: "string"
//            "articleType":
//                type: "string"
//            "organisation":
//                type: "string"
//            "prices":
//                type: "array"
//                items:
//                    type: "object"
//                    properties:
//                        "name":
//                            type: "string"
//                        "price":
//                            type: "number"
//            "product":
//                type: "string"
//            "withDataCompare":
//                type: "boolean"
//        required:
//            - "organisation"
//            - "accountShortId"
//            - "product"
//            - "articleType"
//    "userId":
//        type: "string"
//        format: "uuid"
//required:
//    - "redirectusKey"
//    - "source"
//    - "target"
//    - "contact"
//    - "userId"

//
type ServiceRequestRelocationPayload struct {
	Contact                 ServiceRequestRelocationPayloadContact `json:"contact"`
	Domain                  *ServiceRequestRelocationPayloadDomain `json:"domain,omitempty"`
	Notes                   *string                                `json:"notes,omitempty"`
	PreferredRelocationDate *string                                `json:"preferredRelocationDate,omitempty"`
	RedirectusKey           float64                                `json:"redirectusKey"`
	Source                  ServiceRequestRelocationPayloadSource  `json:"source"`
	Target                  ServiceRequestRelocationPayloadTarget  `json:"target"`
	UserId                  uuid.UUID                              `json:"userId"`
}

func (o *ServiceRequestRelocationPayload) Validate() error {
	if err := o.Contact.Validate(); err != nil {
		return fmt.Errorf("invalid property contact: %w", err)
	}
	if err := func() error {
		if o.Domain == nil {
			return nil
		}
		return o.Domain.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property domain: %w", err)
	}
	if err := o.Source.Validate(); err != nil {
		return fmt.Errorf("invalid property source: %w", err)
	}
	if err := o.Target.Validate(); err != nil {
		return fmt.Errorf("invalid property target: %w", err)
	}
	return nil
}
