package cronjobv2

import (
	"fmt"
	"time"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "active":
//        type: "boolean"
//    "appId":
//        type: "string"
//        format: "uuid"
//    "createdAt":
//        type: "string"
//        format: "date-time"
//    "description":
//        type: "string"
//        example: "i am a cronjob"
//    "destination":
//        oneOf:
//            - {"$ref": "#/components/schemas/de.mittwald.v1.cronjob.CronjobUrl"}
//            - {"$ref": "#/components/schemas/de.mittwald.v1.cronjob.CronjobCommand"}
//    "email":
//        type: "string"
//        format: "email"
//    "failedExecutionAlertThreshold":
//        type: "integer"
//    "id":
//        type: "string"
//        format: "uuid"
//    "interval":
//        type: "string"
//        example: "*/5 * * * *"
//    "latestExecution": {"$ref": "#/components/schemas/de.mittwald.v1.cronjob.CronjobExecution"}
//    "nextExecutionTime":
//        type: "string"
//        format: "date-time"
//    "projectId":
//        type: "string"
//        format: "uuid"
//    "shortId":
//        type: "string"
//        example: "cron-bd26li"
//    "timeout":
//        type: "integer"
//        maximum: 86400
//        minimum: 1
//    "updatedAt":
//        type: "string"
//        format: "date-time"
// required:
//    - "id"
//    - "appId"
//    - "shortId"
//    - "interval"
//    - "active"
//    - "createdAt"
//    - "updatedAt"
//    - "description"
//    - "destination"
//    - "timeout"

type Cronjob struct {
	Active                        bool               `json:"active"`
	AppId                         string             `json:"appId"`
	CreatedAt                     time.Time          `json:"createdAt"`
	Description                   string             `json:"description"`
	Destination                   CronjobDestination `json:"destination"`
	Email                         *string            `json:"email,omitempty"`
	FailedExecutionAlertThreshold *int64             `json:"failedExecutionAlertThreshold,omitempty"`
	Id                            string             `json:"id"`
	Interval                      string             `json:"interval"`
	LatestExecution               *CronjobExecution  `json:"latestExecution,omitempty"`
	NextExecutionTime             *time.Time         `json:"nextExecutionTime,omitempty"`
	ProjectId                     *string            `json:"projectId,omitempty"`
	ShortId                       string             `json:"shortId"`
	Timeout                       int64              `json:"timeout"`
	UpdatedAt                     time.Time          `json:"updatedAt"`
}

func (o *Cronjob) Validate() error {
	if err := o.Destination.Validate(); err != nil {
		return fmt.Errorf("invalid property destination: %w", err)
	}
	if err := func() error {
		if o.LatestExecution == nil {
			return nil
		}
		return o.LatestExecution.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property latestExecution: %w", err)
	}
	return nil
}
