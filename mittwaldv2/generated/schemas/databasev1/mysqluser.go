package databasev1

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"fmt"
	"time"

	"github.com/google/uuid"
)

//This data type was generated from the following JSON schema:
//type: "object"
//properties:
//    "accessIpMask":
//        type: "string"
//    "accessLevel":
//        type: "string"
//        enum:
//            - "full"
//            - "readonly"
//    "createdAt":
//        type: "string"
//        format: "date-time"
//    "databaseId":
//        type: "string"
//        format: "uuid"
//    "description":
//        type: "string"
//    "disabled":
//        type: "boolean"
//    "externalAccess":
//        type: "boolean"
//    "id":
//        type: "string"
//        format: "uuid"
//    "mainUser":
//        type: "boolean"
//    "name":
//        type: "string"
//    "passwordUpdatedAt":
//        type: "string"
//        format: "date-time"
//    "status": {"$ref": "#/components/schemas/de.mittwald.v1.database.DatabaseUserStatus"}
//    "statusSetAt":
//        type: "string"
//        format: "date-time"
//    "updatedAt":
//        type: "string"
//        format: "date-time"
//required:
//    - "id"
//    - "createdAt"
//    - "updatedAt"
//    - "databaseId"
//    - "name"
//    - "passwordUpdatedAt"
//    - "mainUser"
//    - "disabled"
//    - "accessLevel"
//    - "externalAccess"
//    - "status"
//    - "statusSetAt"

type MySqlUser struct {
	AccessIpMask      *string              `json:"accessIpMask,omitempty"`
	AccessLevel       MySqlUserAccessLevel `json:"accessLevel"`
	CreatedAt         time.Time            `json:"createdAt"`
	DatabaseId        uuid.UUID            `json:"databaseId"`
	Description       *string              `json:"description,omitempty"`
	Disabled          bool                 `json:"disabled"`
	ExternalAccess    bool                 `json:"externalAccess"`
	Id                uuid.UUID            `json:"id"`
	MainUser          bool                 `json:"mainUser"`
	Name              string               `json:"name"`
	PasswordUpdatedAt time.Time            `json:"passwordUpdatedAt"`
	Status            DatabaseUserStatus   `json:"status"`
	StatusSetAt       time.Time            `json:"statusSetAt"`
	UpdatedAt         time.Time            `json:"updatedAt"`
}

func (o *MySqlUser) Validate() error {
	if err := o.AccessLevel.Validate(); err != nil {
		return fmt.Errorf("invalid property accessLevel: %w", err)
	}
	if err := o.Status.Validate(); err != nil {
		return fmt.Errorf("invalid property status: %w", err)
	}
	return nil
}
