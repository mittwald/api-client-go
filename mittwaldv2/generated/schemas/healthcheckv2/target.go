package healthcheckv2

import (
	"errors"
	"fmt"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "body":
//        type: "string"
//        maxLength: 1000
//        format: "byte"
//        description: "Content that should be send as request body (base64 encoded bytes)."
//    "description":
//        type: "string"
//    "headers":
//        type: "object"
//        additionalProperties:
//            type: "string"
//            maxLength: 500
//            maxProperties: 100
//        description: "Additional request headers. It is not possible to overwrite the user agent."
//        default: {"Accept": "*/*", "Accept-Encoding": "*", "Accept-Language": "*"}
//    "httpMethod":
//        type: "string"
//        enum:
//            - "GET"
//            - "POST"
//            - "HEAD"
//            - "PUT"
//            - "DELETE"
//            - "PATCH"
//        default: "GET"
//    "interval":
//        type: "integer"
//        maximum: 1800
//        minimum: 5
//        format: "int32"
//        description: "Request interval in seconds."
//        default: 60
//    "maxRedirects":
//        type: "integer"
//        maximum: 10
//        minimum: 0
//        format: "int32"
//        description: "The maximum number of redirects to follow. 0 disables redirects completely."
//        default: 10
//    "timeout":
//        type: "number"
//        maximum: 60
//        minimum: 0.001
//        format: "float"
//        description: "Request timeout in seconds."
//        default: 5
//    "url":
//        type: "string"
//        format: "uri"
//        description: "The url that should be monitored."
//        example: "https://example.com"
// required:
//    - "url"
//    - "description"
//    - "interval"
//    - "timeout"
//    - "maxRedirects"
//    - "httpMethod"
//    - "headers"

type Target struct {
	Body         *string           `json:"body,omitempty"`
	Description  string            `json:"description"`
	Headers      map[string]string `json:"headers"`
	HttpMethod   TargetHttpMethod  `json:"httpMethod"`
	Interval     int64             `json:"interval"`
	MaxRedirects int64             `json:"maxRedirects"`
	Timeout      float64           `json:"timeout"`
	Url          string            `json:"url"`
}

func (o *Target) Validate() error {
	if o.Headers == nil {
		return errors.New("property headers is required, but not set")
	}
	if err := o.HttpMethod.Validate(); err != nil {
		return fmt.Errorf("invalid property httpMethod: %w", err)
	}
	return nil
}
