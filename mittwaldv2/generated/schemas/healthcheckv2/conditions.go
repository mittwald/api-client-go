package healthcheckv2

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "contentUnchanged":
//        type: "boolean"
//        description: "The health check is considered successful if the content has not changed fundamentally."
//    "searchString":
//        type: "string"
//        maxLength: 200
//        minLength: 1
//        description: "The health check is considered successful if the content contains this searchString."
//    "validStatusCodes":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.healthcheck.StatusCodeRange"}
//        description: "The health check is considered successful if the status code is >= lower limit and <= upper limit."
//        default: [{"lower": 200, "upper": 299}]

type Conditions struct {
	ContentUnchanged *bool             `json:"contentUnchanged,omitempty"`
	SearchString     *string           `json:"searchString,omitempty"`
	ValidStatusCodes []StatusCodeRange `json:"validStatusCodes,omitempty"`
}

func (o *Conditions) Validate() error {
	if err := func() error {
		if o.ValidStatusCodes == nil {
			return nil
		}
		return func() error {
			for i := range o.ValidStatusCodes {
				if err := o.ValidStatusCodes[i].Validate(); err != nil {
					return fmt.Errorf("item %d is invalid %w", i, err)
				}
			}
			return nil
		}()
	}(); err != nil {
		return fmt.Errorf("invalid property validStatusCodes: %w", err)
	}
	return nil
}
