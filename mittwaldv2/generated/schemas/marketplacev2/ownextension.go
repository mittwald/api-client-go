package marketplacev2

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "backendComponents": {"$ref": "#/components/schemas/de.mittwald.v1.marketplace.BackendComponents"}
//    "blocked":
//        type: "boolean"
//        deprecated: true
//    "context": {"$ref": "#/components/schemas/de.mittwald.v1.marketplace.Context"}
//    "contributorId":
//        type: "string"
//    "deprecation": {"$ref": "#/components/schemas/de.mittwald.v1.marketplace.ExtensionDeprecation"}
//    "description":
//        type: "string"
//    "detailedDescriptions": {"$ref": "#/components/schemas/de.mittwald.v1.marketplace.DetailedDescriptions"}
//    "disabled":
//        type: "boolean"
//    "frontendComponents":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.marketplace.ExternalComponent"}
//    "frontendFragments":
//        type: "object"
//        additionalProperties: {"$ref": "#/components/schemas/de.mittwald.v1.marketplace.FrontendFragment"}
//    "id":
//        type: "string"
//        format: "uuid"
//    "name":
//        type: "string"
//    "scopes":
//        type: "array"
//        items:
//            type: "string"
//    "state":
//        type: "string"
//        enum:
//            - "enabled"
//            - "blocked"
//            - "disabled"
//        description: "deprecated"
//    "subTitle": {"$ref": "#/components/schemas/de.mittwald.v1.marketplace.SubTitle"}
//    "support": {"$ref": "#/components/schemas/de.mittwald.v1.marketplace.SupportMeta"}
//    "tags":
//        type: "array"
//        items:
//            type: "string"
// required:
//    - "id"
//    - "contributorId"
//    - "name"

type OwnExtension struct {
	BackendComponents    *BackendComponents    `json:"backendComponents,omitempty"`
	Blocked              *bool                 `json:"blocked,omitempty"`
	Context              *Context              `json:"context,omitempty"`
	ContributorId        string                `json:"contributorId"`
	Deprecation          *ExtensionDeprecation `json:"deprecation,omitempty"`
	Description          *string               `json:"description,omitempty"`
	DetailedDescriptions *DetailedDescriptions `json:"detailedDescriptions,omitempty"`
	Disabled             *bool                 `json:"disabled,omitempty"`
	FrontendComponents   []ExternalComponent   `json:"frontendComponents,omitempty"`
	FrontendFragments    map[string]any        `json:"frontendFragments,omitempty"`
	Id                   string                `json:"id"`
	Name                 string                `json:"name"`
	Scopes               []string              `json:"scopes,omitempty"`
	State                *OwnExtensionState    `json:"state,omitempty"`
	SubTitle             *SubTitle             `json:"subTitle,omitempty"`
	Support              *SupportMeta          `json:"support,omitempty"`
	Tags                 []string              `json:"tags,omitempty"`
}

func (o *OwnExtension) Validate() error {
	if err := func() error {
		if o.BackendComponents == nil {
			return nil
		}
		return o.BackendComponents.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property backendComponents: %w", err)
	}
	if err := func() error {
		if o.Context == nil {
			return nil
		}
		return o.Context.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property context: %w", err)
	}
	if err := func() error {
		if o.Deprecation == nil {
			return nil
		}
		return o.Deprecation.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property deprecation: %w", err)
	}
	if err := func() error {
		if o.DetailedDescriptions == nil {
			return nil
		}
		return o.DetailedDescriptions.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property detailedDescriptions: %w", err)
	}
	if err := func() error {
		if o.FrontendComponents == nil {
			return nil
		}
		return func() error {
			for i := range o.FrontendComponents {
				if err := o.FrontendComponents[i].Validate(); err != nil {
					return fmt.Errorf("item %d is invalid %w", i, err)
				}
			}
			return nil
		}()
	}(); err != nil {
		return fmt.Errorf("invalid property frontendComponents: %w", err)
	}
	if err := func() error {
		if o.Scopes == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property scopes: %w", err)
	}
	if err := func() error {
		if o.State == nil {
			return nil
		}
		return o.State.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property state: %w", err)
	}
	if err := func() error {
		if o.SubTitle == nil {
			return nil
		}
		return o.SubTitle.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property subTitle: %w", err)
	}
	if err := func() error {
		if o.Support == nil {
			return nil
		}
		return o.Support.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property support: %w", err)
	}
	if err := func() error {
		if o.Tags == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property tags: %w", err)
	}
	return nil
}
