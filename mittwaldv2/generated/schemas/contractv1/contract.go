package contractv1

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"fmt"

	"github.com/google/uuid"
)

//This data type was generated from the following JSON schema:
//type: "object"
//properties:
//    "additionalItems":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.contract.ContractItem"}
//    "baseItem": {"$ref": "#/components/schemas/de.mittwald.v1.contract.ContractItem"}
//    "contractId":
//        type: "string"
//        format: "uuid"
//    "contractNumber":
//        type: "string"
//        example: "V1234567"
//    "customerId":
//        type: "string"
//        example: "3a201faa-5160-47e0-a758-325ba794b543"
//    "termination": {"$ref": "#/components/schemas/de.mittwald.v1.contract.Termination"}
//required:
//    - "contractId"
//    - "contractNumber"
//    - "customerId"
//    - "baseItem"

type Contract struct {
	AdditionalItems []ContractItem `json:"additionalItems,omitempty"`
	BaseItem        ContractItem   `json:"baseItem"`
	ContractId      uuid.UUID      `json:"contractId"`
	ContractNumber  string         `json:"contractNumber"`
	CustomerId      string         `json:"customerId"`
	Termination     *Termination   `json:"termination,omitempty"`
}

func (o *Contract) Validate() error {
	if err := func() error {
		if o.AdditionalItems == nil {
			return nil
		}
		return func() error {
			for i := range o.AdditionalItems {
				if err := o.AdditionalItems[i].Validate(); err != nil {
					return fmt.Errorf("item %d is invalid %w", i, err)
				}
			}
			return nil
		}()
	}(); err != nil {
		return fmt.Errorf("invalid property additionalItems: %w", err)
	}
	if err := o.BaseItem.Validate(); err != nil {
		return fmt.Errorf("invalid property baseItem: %w", err)
	}
	if err := func() error {
		if o.Termination == nil {
			return nil
		}
		return o.Termination.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property termination: %w", err)
	}
	return nil
}
