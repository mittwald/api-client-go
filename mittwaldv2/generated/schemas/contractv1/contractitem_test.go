package contractv1_test

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

import (
	"encoding/json"

	"github.com/mittwald/api-client-go/mittwaldv2/generated/schemas/contractv1"
	. "github.com/onsi/ginkgo/v2"
	. "github.com/onsi/gomega"
)

var _ = Describe("ContractItem", func() {
	When("unmarshaling from JSON", func() {
		It("should unmarshal", func() {
			exampleJSON := []byte("{\"activationDate\":\"string\",\"aggregateReference\":{\"aggregate\":\"project\",\"domain\":\"project\",\"id\":\"a1b8f0e9-904f-4716-a1c0-81ccf5342a56\"},\"articles\":[{\"amount\":1,\"articleTemplateId\":\"a1b8f0e9-904f-4716-a1c0-81ccf5342a56\",\"description\":\"Musterbeschreibung\",\"id\":\"a1b8f0e9-904f-4716-a1c0-81ccf5342a56\",\"name\":\"Musterartikel\",\"unitPrice\":{\"currency\":\"EUR\",\"value\":100}}],\"contractPeriod\":1,\"description\":\"Space-Server: \\\"Mein Space-Server\\\"\",\"freeTrialDays\":10,\"groupByProjectId\":\"7a9d8971-09b0-4c39-8c64-546b6e1875ce\",\"invoiceStop\":\"string\",\"invoicingPeriod\":1,\"isActivated\":true,\"isBaseItem\":true,\"isInFreeTrial\":true,\"isInclusive\":true,\"itemId\":\"7a9d8971-09b0-4c39-8c64-546b6e1875ce\",\"nextPossibleDowngradeDate\":\"string\",\"nextPossibleTerminationDate\":\"string\",\"nextPossibleUpgradeDate\":\"string\",\"orderDate\":\"string\",\"orderId\":\"7a9d8971-09b0-4c39-8c64-546b6e1875ce\",\"replacedByItem\":\"7a9d8971-09b0-4c39-8c64-546b6e1875ce\",\"tariffChange\":{\"newArticles\":[{\"amount\":1,\"articleTemplateId\":\"a1b8f0e9-904f-4716-a1c0-81ccf5342a56\",\"description\":\"Musterbeschreibung\",\"id\":\"a1b8f0e9-904f-4716-a1c0-81ccf5342a56\",\"name\":\"Musterartikel\",\"unitPrice\":{\"currency\":\"EUR\",\"value\":100}}],\"scheduledAtDate\":\"string\",\"scheduledByUserId\":\"string\",\"targetDate\":\"string\"},\"termination\":{\"cancellationForbidden\":true,\"reason\":\"Not needed anymore\",\"scheduledAtDate\":\"string\",\"scheduledByUserId\":\"string\",\"targetDate\":\"string\"},\"totalPrice\":{\"currency\":\"EUR\",\"value\":100}}")

			sut := contractv1.ContractItem{}
			Expect(json.Unmarshal(exampleJSON, &sut)).To(Succeed())
			Expect(sut.Validate()).To(Succeed())
		})
	})
})
