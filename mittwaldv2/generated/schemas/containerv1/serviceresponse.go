package containerv1

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "deployedState": {"$ref": "#/components/schemas/de.mittwald.v1.container.ServiceState"}
//    "description":
//        type: "string"
//        example: "MySQL DB"
//    "id":
//        type: "string"
//        format: "uuid"
//    "pendingState": {"$ref": "#/components/schemas/de.mittwald.v1.container.ServiceState"}
//    "projectId":
//        type: "string"
//        format: "uuid"
//    "serviceName":
//        type: "string"
//        example: "mysql-db"
//    "stackId":
//        type: "string"
//        format: "uuid"
//    "status": {"$ref": "#/components/schemas/de.mittwald.v1.container.ServiceStatus"}
// required:
//    - "id"
//    - "stackId"
//    - "projectId"
//    - "description"
//    - "serviceName"
//    - "pendingState"
//    - "deployedState"
//    - "status"

type ServiceResponse struct {
	DeployedState ServiceState  `json:"deployedState"`
	Description   string        `json:"description"`
	Id            string        `json:"id"`
	PendingState  ServiceState  `json:"pendingState"`
	ProjectId     string        `json:"projectId"`
	ServiceName   string        `json:"serviceName"`
	StackId       string        `json:"stackId"`
	Status        ServiceStatus `json:"status"`
}

func (o *ServiceResponse) Validate() error {
	if err := o.DeployedState.Validate(); err != nil {
		return fmt.Errorf("invalid property deployedState: %w", err)
	}
	if err := o.PendingState.Validate(); err != nil {
		return fmt.Errorf("invalid property pendingState: %w", err)
	}
	if err := o.Status.Validate(); err != nil {
		return fmt.Errorf("invalid property status: %w", err)
	}
	return nil
}
