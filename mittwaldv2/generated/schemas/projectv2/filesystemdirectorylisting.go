package projectv2

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "absolutePath":
//        type: "string"
//    "isDirectory":
//        type: "boolean"
//    "isExecutable":
//        type: "boolean"
//    "isFile":
//        type: "boolean"
//    "isSymlink":
//        type: "boolean"
//    "items":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.project.FilesystemDirectoryListing"}
//    "name":
//        type: "string"
//    "size":
//        type: "integer"
//    "target":
//        type: "string"
// required:
//    - "absolutePath"
//    - "name"
//    - "size"

type FilesystemDirectoryListing struct {
	AbsolutePath string                       `json:"absolutePath"`
	IsDirectory  *bool                        `json:"isDirectory,omitempty"`
	IsExecutable *bool                        `json:"isExecutable,omitempty"`
	IsFile       *bool                        `json:"isFile,omitempty"`
	IsSymlink    *bool                        `json:"isSymlink,omitempty"`
	Items        []FilesystemDirectoryListing `json:"items,omitempty"`
	Name         string                       `json:"name"`
	Size         int64                        `json:"size"`
	Target       *string                      `json:"target,omitempty"`
}

func (o *FilesystemDirectoryListing) Validate() error {
	if err := func() error {
		if o.Items == nil {
			return nil
		}
		return func() error {
			for i := range o.Items {
				if err := o.Items[i].Validate(); err != nil {
					return fmt.Errorf("item %d is invalid %w", i, err)
				}
			}
			return nil
		}()
	}(); err != nil {
		return fmt.Errorf("invalid property items: %w", err)
	}
	return nil
}
