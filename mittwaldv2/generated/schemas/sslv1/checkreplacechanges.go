package sslv1

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
//type: "object"
//properties:
//    "commonName": {"$ref": "#/components/schemas/de.mittwald.v1.ssl.CheckReplaceFieldChange"}
//    "dnsNames": {"$ref": "#/components/schemas/de.mittwald.v1.ssl.CheckReplaceSliceChange"}
//    "issuer": {"$ref": "#/components/schemas/de.mittwald.v1.ssl.CheckReplaceFieldChange"}
//    "validFrom": {"$ref": "#/components/schemas/de.mittwald.v1.ssl.CheckReplaceDateChange"}
//    "validTo": {"$ref": "#/components/schemas/de.mittwald.v1.ssl.CheckReplaceDateChange"}

type CheckReplaceChanges struct {
	CommonName *CheckReplaceFieldChange `json:"commonName,omitempty"`
	DnsNames   *CheckReplaceSliceChange `json:"dnsNames,omitempty"`
	Issuer     *CheckReplaceFieldChange `json:"issuer,omitempty"`
	ValidFrom  *CheckReplaceDateChange  `json:"validFrom,omitempty"`
	ValidTo    *CheckReplaceDateChange  `json:"validTo,omitempty"`
}

func (o *CheckReplaceChanges) Validate() error {
	if err := func() error {
		if o.CommonName == nil {
			return nil
		}
		return o.CommonName.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property commonName: %w", err)
	}
	if err := func() error {
		if o.DnsNames == nil {
			return nil
		}
		return o.DnsNames.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property dnsNames: %w", err)
	}
	if err := func() error {
		if o.Issuer == nil {
			return nil
		}
		return o.Issuer.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property issuer: %w", err)
	}
	if err := func() error {
		if o.ValidFrom == nil {
			return nil
		}
		return o.ValidFrom.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property validFrom: %w", err)
	}
	if err := func() error {
		if o.ValidTo == nil {
			return nil
		}
		return o.ValidTo.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property validTo: %w", err)
	}
	return nil
}
