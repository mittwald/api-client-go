package containerv2

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "command":
//        type: "array"
//        items:
//            type: "string"
//    "entrypoint":
//        type: "array"
//        items:
//            type: "string"
//    "envs":
//        type: "object"
//        additionalProperties:
//            type: "string"
//    "image":
//        type: "string"
//    "imageDigest":
//        type: "string"
//    "ports":
//        type: "array"
//        items:
//            type: "string"
//    "volumes":
//        type: "array"
//        items:
//            type: "string"
// required:
//    - "image"

type ServiceState struct {
	Command     []string          `json:"command,omitempty"`
	Entrypoint  []string          `json:"entrypoint,omitempty"`
	Envs        map[string]string `json:"envs,omitempty"`
	Image       string            `json:"image"`
	ImageDigest *string           `json:"imageDigest,omitempty"`
	Ports       []string          `json:"ports,omitempty"`
	Volumes     []string          `json:"volumes,omitempty"`
}

func (o *ServiceState) Validate() error {
	if err := func() error {
		if o.Command == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property command: %w", err)
	}
	if err := func() error {
		if o.Entrypoint == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property entrypoint: %w", err)
	}
	if err := func() error {
		if o.Ports == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property ports: %w", err)
	}
	if err := func() error {
		if o.Volumes == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property volumes: %w", err)
	}
	return nil
}
