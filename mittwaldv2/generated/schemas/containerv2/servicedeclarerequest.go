package containerv2

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "command":
//        type: "array"
//        items:
//            type: "string"
//        description: "Defaults to image config on empty"
//        example: ["mysqld"]
//    "description":
//        type: "string"
//        example: "MySQL DB"
//    "entrypoint":
//        type: "array"
//        items:
//            type: "string"
//        description: "Defaults to image config on empty"
//        example: ["docker-entrypoint.sh"]
//    "environment":
//        type: "object"
//        additionalProperties:
//            type: "string"
//        example: {"MYSQL_DATABASE": "my_db", "MYSQL_PASSWORD": "my_password", "MYSQL_ROOT_PASSWORD": "my_root_password", "MYSQL_USER": "my_user"}
//    "envs":
//        type: "object"
//        additionalProperties:
//            type: "string"
//        description: "DEPRECATED: Use 'environment' instead. This field will be removed in a future version."
//        example: {"MYSQL_DATABASE": "my_db", "MYSQL_PASSWORD": "my_password", "MYSQL_ROOT_PASSWORD": "my_root_password", "MYSQL_USER": "my_user"}
//        deprecated: true
//    "image":
//        type: "string"
//        example: "mysql"
//    "ports":
//        type: "array"
//        items:
//            type: "string"
//        example: ["3306:3306/tcp"]
//    "recreate":
//        type: "boolean"
//        description: "Whether to recreate the Service."
//        example: true
//    "volumes":
//        type: "array"
//        items:
//            type: "string"
//        example: ["data:/var/lib/mysql:ro"]
// required:
//    - "image"

type ServiceDeclareRequest struct {
	Command     []string          `json:"command,omitempty"`
	Description *string           `json:"description,omitempty"`
	Entrypoint  []string          `json:"entrypoint,omitempty"`
	Environment map[string]string `json:"environment,omitempty"`
	Envs        map[string]string `json:"envs,omitempty"`
	Image       string            `json:"image"`
	Ports       []string          `json:"ports,omitempty"`
	Recreate    *bool             `json:"recreate,omitempty"`
	Volumes     []string          `json:"volumes,omitempty"`
}

func (o *ServiceDeclareRequest) Validate() error {
	if err := func() error {
		if o.Command == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property command: %w", err)
	}
	if err := func() error {
		if o.Entrypoint == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property entrypoint: %w", err)
	}
	if err := func() error {
		if o.Ports == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property ports: %w", err)
	}
	if err := func() error {
		if o.Volumes == nil {
			return nil
		}
		return nil
	}(); err != nil {
		return fmt.Errorf("invalid property volumes: %w", err)
	}
	return nil
}
