package containerv2

import (
	"fmt"
	"time"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

// This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "deploy": {"$ref": "#/components/schemas/de.mittwald.v1.container.Deploy"}
//    "deployedState": {"$ref": "#/components/schemas/de.mittwald.v1.container.ServiceState"}
//    "description":
//        type: "string"
//        example: "MySQL DB"
//    "id":
//        type: "string"
//        format: "uuid"
//    "message":
//        type: "string"
//        example: "Container ready"
//    "pendingState": {"$ref": "#/components/schemas/de.mittwald.v1.container.ServiceState"}
//    "projectId":
//        type: "string"
//        format: "uuid"
//    "requiresRecreate":
//        type: "boolean"
//    "serviceName":
//        type: "string"
//        example: "mysql-db"
//    "shortId":
//        type: "string"
//        example: "c-12e4u6"
//    "stackId":
//        type: "string"
//        format: "uuid"
//    "status": {"$ref": "#/components/schemas/de.mittwald.v1.container.ServiceStatus"}
//    "statusSetAt":
//        type: "string"
//        format: "date-time"
// required:
//    - "id"
//    - "stackId"
//    - "projectId"
//    - "description"
//    - "serviceName"
//    - "pendingState"
//    - "deployedState"
//    - "status"
//    - "shortId"
//    - "statusSetAt"
//    - "requiresRecreate"

type ServiceResponse struct {
	Deploy           *Deploy       `json:"deploy,omitempty"`
	DeployedState    ServiceState  `json:"deployedState"`
	Description      string        `json:"description"`
	Id               string        `json:"id"`
	Message          *string       `json:"message,omitempty"`
	PendingState     ServiceState  `json:"pendingState"`
	ProjectId        string        `json:"projectId"`
	RequiresRecreate bool          `json:"requiresRecreate"`
	ServiceName      string        `json:"serviceName"`
	ShortId          string        `json:"shortId"`
	StackId          string        `json:"stackId"`
	Status           ServiceStatus `json:"status"`
	StatusSetAt      time.Time     `json:"statusSetAt"`
}

func (o *ServiceResponse) Validate() error {
	if err := func() error {
		if o.Deploy == nil {
			return nil
		}
		return o.Deploy.Validate()
	}(); err != nil {
		return fmt.Errorf("invalid property deploy: %w", err)
	}
	if err := o.DeployedState.Validate(); err != nil {
		return fmt.Errorf("invalid property deployedState: %w", err)
	}
	if err := o.PendingState.Validate(); err != nil {
		return fmt.Errorf("invalid property pendingState: %w", err)
	}
	if err := o.Status.Validate(); err != nil {
		return fmt.Errorf("invalid property status: %w", err)
	}
	return nil
}
