package containerv2

import "fmt"

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// type: "object"
// properties:
//    "description":
//        type: "string"
//    "disabled":
//        type: "boolean"
//    "id":
//        type: "string"
//        format: "uuid"
//    "prefix":
//        type: "string"
//        description: "Prefix for all service-names in this stack."
//    "projectId":
//        type: "string"
//        format: "uuid"
//    "services":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.container.ServiceResponse"}
//    "volumes":
//        type: "array"
//        items: {"$ref": "#/components/schemas/de.mittwald.v1.container.VolumeResponse"}
// required:
//    - "id"
//    - "projectId"
//    - "description"
//    - "disabled"
//    - "prefix"

type StackResponse struct {
	Description string            `json:"description"`
	Disabled    bool              `json:"disabled"`
	Id          string            `json:"id"`
	Prefix      string            `json:"prefix"`
	ProjectId   string            `json:"projectId"`
	Services    []ServiceResponse `json:"services,omitempty"`
	Volumes     []VolumeResponse  `json:"volumes,omitempty"`
}

func (o *StackResponse) Validate() error {
	if err := func() error {
		if o.Services == nil {
			return nil
		}
		return func() error {
			for i := range o.Services {
				if err := o.Services[i].Validate(); err != nil {
					return fmt.Errorf("item %d is invalid %w", i, err)
				}
			}
			return nil
		}()
	}(); err != nil {
		return fmt.Errorf("invalid property services: %w", err)
	}
	if err := func() error {
		if o.Volumes == nil {
			return nil
		}
		return func() error {
			for i := range o.Volumes {
				if err := o.Volumes[i].Validate(); err != nil {
					return fmt.Errorf("item %d is invalid %w", i, err)
				}
			}
			return nil
		}()
	}(); err != nil {
		return fmt.Errorf("invalid property volumes: %w", err)
	}
	return nil
}
