package conversationv2

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

// This code was automatically generated by github.com/mittwald/api-client-go-builder.
// DO NOT EDIT.

//This data type was generated from the following JSON schema:
// oneOf:
//    - type: "object"
//      properties:
//        "aggregate":
//            type: "string"
//            enum:
//                - "user"
//        "domain":
//            type: "string"
//            enum:
//                - "user"
//        "id":
//            type: "string"
//      required:
//        - "id"
//        - "aggregate"
//        - "domain"
//    - type: "object"
//      properties:
//        "aggregate":
//            type: "string"
//            enum:
//                - "customer"
//        "domain":
//            type: "string"
//            enum:
//                - "customer"
//        "id":
//            type: "string"
//      required:
//        - "id"
//        - "aggregate"
//        - "domain"
//    - type: "object"
//      properties:
//        "aggregate":
//            type: "string"
//            enum:
//                - "project"
//        "domain":
//            type: "string"
//            enum:
//                - "project"
//        "id":
//            type: "string"
//      required:
//        - "id"
//        - "aggregate"
//        - "domain"
//    - type: "object"
//      properties:
//        "aggregate":
//            type: "string"
//            enum:
//                - "placementgroup"
//        "domain":
//            type: "string"
//            enum:
//                - "project"
//        "id":
//            type: "string"
//      required:
//        - "id"
//        - "aggregate"
//        - "domain"

type ShareableAggregateReference struct {
	AlternativeShareableAggregateReferenceAlternative1 *ShareableAggregateReferenceAlternative1
	AlternativeShareableAggregateReferenceAlternative2 *ShareableAggregateReferenceAlternative2
	AlternativeShareableAggregateReferenceAlternative3 *ShareableAggregateReferenceAlternative3
	AlternativeShareableAggregateReferenceAlternative4 *ShareableAggregateReferenceAlternative4
}

func (a *ShareableAggregateReference) MarshalJSON() ([]byte, error) {
	if a.AlternativeShareableAggregateReferenceAlternative1 != nil {
		return json.Marshal(a.AlternativeShareableAggregateReferenceAlternative1)
	}
	if a.AlternativeShareableAggregateReferenceAlternative2 != nil {
		return json.Marshal(a.AlternativeShareableAggregateReferenceAlternative2)
	}
	if a.AlternativeShareableAggregateReferenceAlternative3 != nil {
		return json.Marshal(a.AlternativeShareableAggregateReferenceAlternative3)
	}
	if a.AlternativeShareableAggregateReferenceAlternative4 != nil {
		return json.Marshal(a.AlternativeShareableAggregateReferenceAlternative4)
	}
	return []byte("null"), nil
}

func (a *ShareableAggregateReference) UnmarshalJSON(input []byte) error {
	reader := bytes.NewReader(input)
	decodedAtLeastOnce := false
	dec := json.NewDecoder(reader)
	dec.DisallowUnknownFields()

	reader.Reset(input)
	var alternativeShareableAggregateReferenceAlternative1 ShareableAggregateReferenceAlternative1
	if err := dec.Decode(&alternativeShareableAggregateReferenceAlternative1); err == nil {
		//subtype: *generator.ObjectType
		if vErr := alternativeShareableAggregateReferenceAlternative1.Validate(); vErr == nil {
			a.AlternativeShareableAggregateReferenceAlternative1 = &alternativeShareableAggregateReferenceAlternative1
			decodedAtLeastOnce = true
		}
	}

	reader.Reset(input)
	var alternativeShareableAggregateReferenceAlternative2 ShareableAggregateReferenceAlternative2
	if err := dec.Decode(&alternativeShareableAggregateReferenceAlternative2); err == nil {
		//subtype: *generator.ObjectType
		if vErr := alternativeShareableAggregateReferenceAlternative2.Validate(); vErr == nil {
			a.AlternativeShareableAggregateReferenceAlternative2 = &alternativeShareableAggregateReferenceAlternative2
			decodedAtLeastOnce = true
		}
	}

	reader.Reset(input)
	var alternativeShareableAggregateReferenceAlternative3 ShareableAggregateReferenceAlternative3
	if err := dec.Decode(&alternativeShareableAggregateReferenceAlternative3); err == nil {
		//subtype: *generator.ObjectType
		if vErr := alternativeShareableAggregateReferenceAlternative3.Validate(); vErr == nil {
			a.AlternativeShareableAggregateReferenceAlternative3 = &alternativeShareableAggregateReferenceAlternative3
			decodedAtLeastOnce = true
		}
	}

	reader.Reset(input)
	var alternativeShareableAggregateReferenceAlternative4 ShareableAggregateReferenceAlternative4
	if err := dec.Decode(&alternativeShareableAggregateReferenceAlternative4); err == nil {
		//subtype: *generator.ObjectType
		if vErr := alternativeShareableAggregateReferenceAlternative4.Validate(); vErr == nil {
			a.AlternativeShareableAggregateReferenceAlternative4 = &alternativeShareableAggregateReferenceAlternative4
			decodedAtLeastOnce = true
		}
	}

	if !decodedAtLeastOnce {
		return fmt.Errorf("could not unmarshal into any alternative for type %T", a)
	}
	return nil
}

func (a *ShareableAggregateReference) Validate() error {
	if a.AlternativeShareableAggregateReferenceAlternative1 != nil {
		return a.AlternativeShareableAggregateReferenceAlternative1.Validate()
	}
	if a.AlternativeShareableAggregateReferenceAlternative2 != nil {
		return a.AlternativeShareableAggregateReferenceAlternative2.Validate()
	}
	if a.AlternativeShareableAggregateReferenceAlternative3 != nil {
		return a.AlternativeShareableAggregateReferenceAlternative3.Validate()
	}
	if a.AlternativeShareableAggregateReferenceAlternative4 != nil {
		return a.AlternativeShareableAggregateReferenceAlternative4.Validate()
	}
	return errors.New("no alternative set")
}
